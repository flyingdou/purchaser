<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.purchaser.dao.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.purchaser.pojo.Member" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="no" property="no" jdbcType="VARCHAR"/>
    <result column="user" property="user" jdbcType="BIGINT" />
    <result column="duty" property="duty" jdbcType="VARCHAR" />
    <result column="affiliation" property="affiliation" jdbcType="VARCHAR" />
    <result column="company_type" property="companyType" jdbcType="INTEGER" />
    <result column="business" property="business" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="audit" property="audit" jdbcType="INTEGER" />
    <result column="apply_date" property="applyDate" jdbcType="TIMESTAMP" />
    <result column="valid" property="valid" jdbcType="INTEGER" />
    <result column="expiration" property="expiration" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, no, user, duty, affiliation, company_type, business, type, audit, apply_date, valid, expiration
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_member
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_member
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.purchaser.pojo.Member" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_member (id, no, user, duty, 
      affiliation, company_type, business, 
      type, audit, apply_date, valid,expiration
      )
    values (#{id,jdbcType=BIGINT}, #{no,jdbcType=VARCHAR}, #{user,jdbcType=BIGINT}, #{duty,jdbcType=VARCHAR}, 
      #{affiliation,jdbcType=VARCHAR}, #{companyType,jdbcType=INTEGER}, #{business,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{audit,jdbcType=INTEGER}, #{applyDate,jdbcType=TIMESTAMP}, #{valid,jdbcType=INTEGER},
      #{expiration,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.purchaser.pojo.Member" >
    insert into tb_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="no != null" >
        no,
      </if>
      <if test="user != null" >
        user,
      </if>
      <if test="duty != null" >
        duty,
      </if>
      <if test="affiliation != null" >
        affiliation,
      </if>
      <if test="companyType != null" >
        company_type,
      </if>
      <if test="business != null" >
        business,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="audit != null" >
        audit,
      </if>
      <if test="applyDate != null" >
        apply_date,
      </if>
      <if test="valid != null" >
        valid,
      </if>
      <if test="expiration != null" >
        expiration,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="no != null" >
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="user != null" >
        #{user,jdbcType=BIGINT},
      </if>
      <if test="duty != null" >
        #{duty,jdbcType=VARCHAR},
      </if>
      <if test="affiliation != null" >
        #{affiliation,jdbcType=VARCHAR},
      </if>
      <if test="companyType != null" >
        #{companyType,jdbcType=INTEGER},
      </if>
      <if test="business != null" >
        #{business,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="audit != null" >
        #{audit,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null" >
        #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=INTEGER},
      </if>
      <if test="expiration != null" >
        #{expiration,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.purchaser.pojo.Member" >
    update tb_member
    <set >
      <if test="no != null" >
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="user != null" >
        user = #{user,jdbcType=BIGINT},
      </if>
      <if test="duty != null" >
        duty = #{duty,jdbcType=VARCHAR},
      </if>
      <if test="affiliation != null" >
        affiliation = #{affiliation,jdbcType=VARCHAR},
      </if>
      <if test="companyType != null" >
        company_type = #{companyType,jdbcType=INTEGER},
      </if>
      <if test="business != null" >
        business = #{business,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="audit != null" >
        audit = #{audit,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null" >
        apply_date = #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=INTEGER},
      </if>
      <if test="expiration != null" >
        expiration = #{expiration,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.purchaser.pojo.Member" >
    update tb_member
      set no = #{no,jdbcType=VARCHAR},
      user = #{user,jdbcType=BIGINT},
      duty = #{duty,jdbcType=VARCHAR},
      affiliation = #{affiliation,jdbcType=VARCHAR},
      company_type = #{companyType,jdbcType=INTEGER},
      business = #{business,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      audit = #{audit,jdbcType=INTEGER},
      apply_date = #{applyDate,jdbcType=TIMESTAMP}
      valid = #{valid,jdbcType=INTEGER},
      expiration = #{expiration,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 查询会员基本信息 -->
  <select id="findMemberInfo" parameterType="Map" resultType="Map">
          select 
					m.id as mid, u.name, u.gender, u.id_card_num, u.mobilephone, u.email, u.image, 
		            SUBSTRING_INDEX(u.concord,'/',1) as province, SUBSTRING_INDEX(u.concord,'/',-1) as city, 
					m.duty, m.affiliation, pc.name as company_type, m.company_type as company_type_id,
                    pb.name as business, m.business as business_id, mp.type_name as type, mp.type as type_id, mp.price  
			from 
			      	tb_user u INNER JOIN tb_member m ON u.id = m.user and m.valid = #{valid}
			                  LEFT JOIN tb_member_price mp ON m.type = mp.id 
			                  LEFT JOIN tb_parameter pc ON pc.id = m.company_type 
                              LEFT JOIN tb_parameter pb ON pb.id = m.business
		   where 
					u.id = #{userId}
  </select>
  
  
  <!-- 查询用户会员价格信息 -->
  <select id="getMemberPrice" parameterType="Map" resultType="Map">
		  select 
			        m.id as memberId, mp.type_name, mp.price
			from    
			        tb_user u LEFT JOIN tb_member m ON u.id = m.user and m.valid = #{valid} 
			                  INNER JOIN tb_member_price mp ON m.type = mp.id 
		   where 
			        u.id = #{userId} 
		   order by 
		            mp.id desc 
		            limit 1  
  </select>
  
  
  <!-- 查询会员简单的信息 -->
  <select id="memberSimple" parameterType="Map" resultType="Map">
          select 
					u.name, u.image, m.duty, m.no, mp.type_name,
					m.expiration as valid_period 
			from 
			      	tb_user u LEFT JOIN tb_member m ON u.id = m.user and m.valid = #{valid} 
			                  LEFT JOIN tb_member_price mp ON m.type = mp.id 
		   where 
					u.id = #{userId} 
  </select>
  
  <!-- 查询会员列表 -->
  <select id="getMemberList" parameterType="Map" resultType="Map">
			SELECT 
			        m.id, u.name, u.id_card_num, u.concord, u.mobilephone, u.email, 
			        m.duty, m.affiliation, pc.name as company_name, 
			        pb.name as business_name, mp.type_name, mp.price, 
			        m.expiration as valid_period 
			FROM 
			        tb_user u  INNER JOIN tb_member m ON u.id = m.user 
			                   LEFT JOIN tb_parameter pc ON m.company_type = pc.id 
			                   LEFT JOIN tb_parameter  pb ON m.business = pb.id 
			                   LEFT JOIN tb_member_price mp ON m.type = mp.id 
			WHERE
			       m.audit = #{audit} 
			       AND m.valid = #{valid} 
			LIMIT
			      #{start},#{pageSize}
			      
  </select>
  
  <!-- 查询有效会员的总数量 -->
  <select id="memberListCount" parameterType="Map" resultType="Integer">
			SELECT 
			        count(m.id) as count 
			FROM 
			        tb_user u  INNER JOIN tb_member m ON u.id = m.user 
			                   
			WHERE
			       m.audit = #{audit} 
			       AND m.valid = #{valid}  
  
  </select>


  <!-- 插叙即将过期的会员，发送微信模板消息，提示用户续费，以维持会员身份 -->
  <select id="expirationList" parameterType="Map" resultType="Map">
		SELECT 
		         m.id, u.name, mp.type_name, m.no, m.expiration, u.wechat_id,    
		         TIMESTAMPDIFF(DAY,NOW(),m.expiration) as diffDay 
		          
		  FROM 
		         tb_member m INNER JOIN tb_user u ON m.user = u.id  
		                     INNER JOIN tb_member_price mp ON m.type = mp.id  
		 WHERE    
		         m.valid = #{valid}
		
		HAVING   
		         diffDay &gt; #{dayMin}  
		         AND diffDay &lt;= #{dayMax}
		 
  </select>  
  
  
  <!-- 查询权益到期的会员 -->
  <select id="expiredMember" parameterType="Map" resultType="Map">
		SELECT 
		        m.id 
		  FROM 
		        tb_member m INNER JOIN tb_user u ON m.user = u.id AND m.valid = #{valid}
		 WHERE 
		        now() &gt;= m.expiration   
  </select>
  
  <!-- 查询截止目前位置的最新会员编号 -->
  <select id="getNo" resultType="String">
     	select 
     			no 
     	  from 
     	  	    tb_member  
     	 where 
     	 		not ISNULL(no) 
      ORDER BY 
      			no desc  
      	LIMIT 
      		    1 
  </select>
  
  
  
  
</mapper>